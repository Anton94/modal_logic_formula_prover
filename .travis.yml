sudo: required
language: cpp
dist: xenial

env:
  global:
   - MAKEFLAGS="-j 2"

matrix:
  include:

    # 1/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &clang40
        apt:
          sources:
            - llvm-toolchain-xenial-4.0
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++-6-dev
            - clang-4.0
            - cmake
      env:
        - COMPILERCXX='clang++-4.0'
        - COMPILERC='clang-4.0'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

    - os: linux
      compiler: clang
      addons: &clang50
        apt:
          sources:
            - llvm-toolchain-xenial-5.0
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++-7-dev
            - clang-5.0
            - cmake
      env:
        - COMPILERCXX='clang++-5.0'
        - COMPILERC='clang-5.0'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

    - os: linux
      compiler: clang
      addons: &clang60
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - cmake
      env:
        - COMPILERCXX='clang++-6.0'
        - COMPILERC='clang-6.0'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

    - os: linux
      compiler: clang
      addons: &clang70
        apt:
          sources:
            - llvm-toolchain-xenial-7
            - ubuntu-toolchain-r-test
          packages:
            - clang-7
            - cmake
      env:
        - COMPILERCXX='clang++-7'
        - COMPILERC='clang-7'

    - os: linux
      compiler: clang
      addons: &clang80
        apt:
          sources:
            - llvm-toolchain-xenial-8
            - ubuntu-toolchain-r-test
          packages:
            - clang-8
            - cmake
      env:
        - COMPILERCXX='clang++-8'
        - COMPILERC='clang-8'

    # 2/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc5
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
      env:
        - COMPILERCXX='g++-5'
        - COMPILERC='gcc-5'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

    - os: linux
      compiler: gcc
      addons: &gcc6
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - cmake
      env:
        - COMPILERCXX='g++-6'
        - COMPILERC='gcc-6'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

    - os: linux
      compiler: gcc
      addons: &gcc7
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - cmake
      env:
        - COMPILERCXX='g++-7'
        - COMPILERC='gcc-7'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

    - os: linux
      compiler: gcc
      addons: &gcc8
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - cmake
      env:
        - COMPILERCXX='g++-8'
        - COMPILERC='gcc-8'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

    - os: linux
      compiler: gcc
      addons: &gcc9
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - cmake
      env:
        - COMPILERCXX='g++-9'
        - COMPILERC='gcc-9'
        - ENABLE_ADDRESS_UB_LEAK_SANITIZERS=true

before_install:
  - sudo apt-get install libcpprest-dev

script:
  - mkdir build
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX=./install -DENABLE_ADDRESS_UB_LEAK_SANITIZERS=$DENABLE_ADDRESS_UB_LEAK_SANITIZERS -DCMAKE_C_COMPILER=$COMPILERC -DCMAKE_CXX_COMPILER=$COMPILERCXX -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold ..
  - cmake --build .
  - cd tests
  - ./tests -d yes
